<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>7fff</title>
  <id>http://7fff.com/</id>
  <link href="http://7fff.com/"/>
  <link href="http://7fff.com/feed" rel="self"/>
  <updated>2024-12-02T09:28:00-06:00</updated>
  <author>
    <name>jgn</name>
  </author>
  <entry>
    <title>Arrays are rarely the natural choice in bash; use files</title>
    <link rel="alternate" href="http://7fff.com/2024/12/arrays-are-rarely-the-natural-choice-in-bash-use-files/"/>
    <id>http://7fff.com/2024/12/arrays-are-rarely-the-natural-choice-in-bash-use-files/</id>
    <published>2024-12-02T09:28:00-06:00</published>
    <updated>2024-12-02T09:43:58-06:00</updated>
    <author>
      <name>jgn</name>
    </author>
    <content type="html">&lt;p&gt;So I wanted to format some text whereby I specify a width and a utility fills and wraps the
lines.&lt;/p&gt;

&lt;p&gt;Example input text:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;The output for `ls-files` is incredibly limited, right? That's because the
typical use case is to list files of a certain type.

You can do

  ls-files -c  # show cached (tracked)
  ls-files -d  # show unstaged deletions
  ls-files -u  # show unmerged

There is also an option -t that shows status tag (though the tags are weird:
for instance, the tag for a tracked file is: H).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fortunately there&amp;#39;s a nice tool called &lt;code&gt;fmt&lt;/code&gt; that can do pretty much what we want.&lt;/p&gt;

&lt;p&gt;You can do &lt;code&gt;fmt -w 50 &amp;lt;text.txt&lt;/code&gt; and get the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;The output for `ls-files` is incredibly limited,
right? That's because the typical use case is to
list files of a certain type.

You can do

  ls-files -c  # show cached (tracked) ls-files -d
  # show unstaged deletions ls-files -u  # show
  unmerged

There is also an option -t that shows status tag
(though the tags are weird: for instance, the tag
for a tracked file is: H).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well that&amp;#39;s not right. I would like it to leave lines alone that have fewer characters than
the specified width. In other words, I want:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;The output for `ls-files` is incredibly limited,
right? That's because the typical use case is to
list files of a certain type.

You can do

  ls-files -c  # show cached (tracked)
  ls-files -d  # show unstaged deletions
  ls-files -u  # show unmerged

There is also an option -t that shows status tag
(though the tags are weird: for instance, the tag
for a tracked file is: H).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I could do this pretty fast in Ruby, but in this case, I needed it in shell (for bash), and
I didn&amp;#39;t want to incur the startup time of a Ruby script called from a bash script.&lt;/p&gt;

&lt;p&gt;My first instinct was to use arrays, because that feels natural to me as a programmer -- I might
split on newlines and do something with the result.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s what I came up with. Note that on my target, the Mac, the latest version of bash is 3.2
(for licensing reasons). This means I couldn&amp;#39;t use some of the newer array functions from bash 4.&lt;/p&gt;

&lt;p&gt;(By the way, I do know the bash convention of using all uppercase for environment variable
names, but that&amp;#39;s just too ugly. Sorry.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;shift
&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=()&lt;/span&gt;
&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;=()&lt;/span&gt;
&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="nv"&gt;last_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0

&lt;span class="nv"&gt;format_command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fmt"&lt;/span&gt;    &lt;span class="c"&gt;# or `par -j`&lt;/span&gt;

format &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;local &lt;/span&gt;formatted

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${#&lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-gt&lt;/span&gt; 1 &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nv"&gt;formatted&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;'%s'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$format_command&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
    output+&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$formatted&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;fi
  &lt;/span&gt;output+&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;=()&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for &lt;/span&gt;line &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c"&gt;# hit a newline; format everything accumulated in the buffer&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;format
  &lt;span class="c"&gt;# hit a short line; add it to the output unformatted&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${#&lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-eq&lt;/span&gt; 0 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${#&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-le&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;output+&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="c"&gt;# a regular line; add it to the buffer for later formatting.&lt;/span&gt;
  &lt;span class="k"&gt;else
    &lt;/span&gt;buffer+&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt; "&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;fi
done

&lt;/span&gt;format

&lt;span class="nv"&gt;last_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt; &lt;span class="k"&gt;${#&lt;/span&gt;&lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="k"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;unset&lt;/span&gt; &lt;span class="s2"&gt;"output[&lt;/span&gt;&lt;span class="nv"&gt;$last_index&lt;/span&gt;&lt;span class="s2"&gt;]"&lt;/span&gt;

&lt;span class="c"&gt;# Split elements in original on newline&lt;/span&gt;
&lt;span class="nv"&gt;split_on_newline&lt;/span&gt;&lt;span class="o"&gt;=()&lt;/span&gt;
&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; line&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;split_on_newline+&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;'%s\n'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;split_on_newline&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So as you can see, there&amp;#39;s rather a lot of wrangling of arrays: getting lines added from a file.
There&amp;#39;s also the syntax burden of bash arrays, which is non-trivial. I kept looking at this,
and after awhile it just seemed dumb. Why not write a more routine bash command that reads
from STDIN and writes to STDOUT?&lt;/p&gt;

&lt;p&gt;So I came up with this, which is shorter and seems more natural:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;30
&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fmt"&lt;/span&gt;
&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;

&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;read&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; line&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
  if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nt"&gt;-z&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${#&lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-ne&lt;/span&gt; 0 &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;'%s\n'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | &lt;span class="nv"&gt;$command&lt;/span&gt; &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$width&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${#&lt;/span&gt;&lt;span class="nv"&gt;buffer&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-eq&lt;/span&gt; 0 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${#&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nt"&gt;-lt&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$width&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
    &lt;/span&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;'%s\n'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="k"&gt;else
    &lt;/span&gt;buffer+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    buffer+&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;" "&lt;/span&gt;
  &lt;span class="k"&gt;fi
done
&lt;/span&gt;&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;'%s\n'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | &lt;span class="nv"&gt;$command&lt;/span&gt; &lt;span class="nt"&gt;-w&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$width&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This one takes two parameters, the first being the width, and the second being the command
to use (if one doesn&amp;#39;t want to use the default, &lt;code&gt;fmt&lt;/code&gt;). So if you like, you can use &lt;code&gt;par&lt;/code&gt; to
justify the text. For example: ./wrap 50 &amp;quot;par -j&amp;quot; gets you:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;The output  for `ls-files` is  incredibly limited,
right? That's  because the typical use  case is to
list files of a certain type.

You can do

  ls-files -c  # show cached (tracked)
  ls-files -d  # show unstaged deletions
  ls-files -u  # show unmerged

There is also  an option -t that  shows status tag
(though the tags are  weird: for instance, the tag
for a tracked file is: H).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Using Google Apps Script to convert a Word document to Google Docs</title>
    <link rel="alternate" href="http://7fff.com/2024/09/using-google-apps-script-to-convert-a-word-document-to-google-docs/"/>
    <id>http://7fff.com/2024/09/using-google-apps-script-to-convert-a-word-document-to-google-docs/</id>
    <published>2024-09-09T09:08:00-05:00</published>
    <updated>2024-12-02T08:46:56-06:00</updated>
    <author>
      <name>jgn</name>
    </author>
    <content type="html">&lt;p&gt;I recently wanted to write code to convert a Microsoft Word document to a Google Doc. (In fact,
I wanted to convert many such Word docs.)&lt;/p&gt;

&lt;p&gt;This turned out to be pretty obscure. Here&amp;#39;s how to do it (ids changed):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function go() {
  convertWordDocToGoogleDoc(
    "15qYN30uJAsMhKxUb1nbCoE09NT7-FPZs",
    "Converted",
    "1-Grx_yhWWOA73-1dnbEI6JlfHkDXxzr6"
  );
}

function convertWordDocToGoogleDoc(sourceFileId, targetFileName, targetFolderId) {
  // Convert a Word doc to a Google doc
  // (this was a royal pain to figure out)
  let targetResource = {
    'name':     targetFileName,
    'mimeType': MimeType.GOOGLE_DOCS,
    'parents':  [targetFolderId]
  };
  // Notice: This is done with the *Drive* service, not the DocumentApp
  // To add the Drive Service, click the "+" by Services in the left-hand
  // pane and select Drive API.
  let targetFile = Drive.Files.copy(targetResource, sourceFileId);

  return targetFile.id;
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>The New York Times' mobile 'Today's Paper' could be a lot better</title>
    <link rel="alternate" href="http://7fff.com/2024/03/the-new-york-times-mobile-today-s-paper-could-be-a-lot-better/"/>
    <id>http://7fff.com/2024/03/the-new-york-times-mobile-today-s-paper-could-be-a-lot-better/</id>
    <published>2024-03-30T11:37:00-05:00</published>
    <updated>2024-03-30T12:23:07-05:00</updated>
    <author>
      <name>jgn</name>
    </author>
    <content type="html">&lt;p&gt;I like to read the paper. On paper. I like to read a paper with a lot of news, if not the most
news (compared to other papers). That would seem to be the New
York Times. I subscribe to home delivery with a Friday, Saturday, Sunday 
subscription which also gets me the online/mobile experience. What I like about the printed
edition is that the importance of articles is indicated by size and placement, and I can scan
more headlines at a glance. The pictures are bigger. Oh, and it&amp;#39;s not online. I spend most of
my week looking at a computer screen, and it&amp;#39;s a nice treat to do some old-fashioned reading
from print.&lt;/p&gt;

&lt;p&gt;Recently, however, my eyes have gotten worse, and for whatever
reason, the print seems to be lighter. I think the paper is printed here in Minnesota and sometimes
the print is light enough that it&amp;#39;s hard to read, even when under a bright light. This has made
me wonder about switching to the mobile edition, where I can control brightness (and font size,
though I&amp;#39;m satisfied with the default font size on mobile).&lt;/p&gt;

&lt;p&gt;But remember that I like the print edition&amp;#39;s sequencing of articles, the size of headlines, and
so forth. This has made me wonder whether I would really be satisfied with the Today&amp;#39;s Paper
feature. You can see the web version of this by going to &lt;a href="https://www.nytimes.com/section/todayspaper"&gt;&lt;a href="https://www.nytimes.com/section/todayspaper"&gt;https://www.nytimes.com/section/todayspaper&lt;/a&gt;&lt;/a&gt;. There are subtle differences between the web and mobile
experiences which I will touch on. Also, I should note that there was an old site called
app.nytimes.com, which has been discontinued. This was an earlier attempt by the Times to simulate
the day&amp;#39;s paper. I think it failed because it would re-render the articles into print + pictures,
and thus didn&amp;#39;t have some of the really cool digital features that the Times has created over the
years. There&amp;#39;s also the replica edition, which I don&amp;#39;t like because the user experience
is awkward and requires a lot of clicks. Also, I want to note that there are distinct advantages
to the electronic editions: It&amp;#39;s easier to share an article; and you can read and participate
in the comment section.&lt;/p&gt;

&lt;p&gt;So here I want to describe some of the differences between the printed version of the Times, and
the Today&amp;#39;s Paper version, in particular the mobile version on an iPad. For this comparison,
I&amp;#39;ll be comparing the print and mobile editions for March 30, 2024.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;First off, when you get the printed Times, you can just start reading it immediately. On the
web, you could bookmark the Today&amp;#39;s Paper page. In the mobile experience, you have to navigate
through the Sections button, then scroll to near the bottom, and select Today&amp;#39;s Paper. &lt;strong&gt;Suggestion:
Make it much easier to get to Today&amp;#39;s Paper, and see the articles right away. If you have to, package it as a separate app.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the web version, the date is shown in a dropdown, and you can navigate to another day.
&lt;strong&gt;Suggestions: (1) Show the date in the app on the mobile edition; (2) Bring the ability to see Today&amp;#39;s Paper
for any date to the mobile edition.&lt;/strong&gt; This latter point is more important than it might seem. When
I&amp;#39;m traveling for work or on vacation, sometimes I miss a day or two. I&amp;#39;d like to be able to catch up easily -- but I
can&amp;#39;t.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here&amp;#39;s the top headline in the print edition: &amp;quot;Pandemic Effect: Absence From Schools is Soaring.&amp;quot;
Mobile: &amp;quot;Why School Absences have &amp;#39;Exploded&amp;#39; Almost Everywhere.&amp;quot; &lt;strong&gt;Suggestion: Make the headlines
the same.&lt;/strong&gt; While I&amp;#39;m at it, have the URL slug be the same. Why? So that I can be assured that
I am talking about the same article as it was titled in print. Look, you&amp;#39;re calling this feature
Today&amp;#39;s &lt;em&gt;Paper&lt;/em&gt;. Do us a favor, and support those semantics -- follow the paper version. If you
like, call it Today&amp;#39;s Edition instead of Today&amp;#39;s Paper. But at present, it&amp;#39;s not Today&amp;#39;s &lt;em&gt;Paper&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Here is my number one most critical concern: It is not easy to read the Times &lt;em&gt;in its print sequence&lt;/em&gt;
in the mobile edition.&lt;/strong&gt; The main issue is that to get to the next article as offered in the
print edition, you have to&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scroll down so as to expose the back button (&amp;lt;).&lt;/li&gt;
&lt;li&gt;Tap the back button.&lt;/li&gt;
&lt;li&gt;Tap the next article (or scroll to it if it&amp;#39;s below -- note that the iPad and iPhone
experiences are a bit different in that on the phone all of the articles are on a list,
while on the iPad the &amp;quot;next&amp;quot; article might be to the right of the one you just read.
In any case, I don&amp;#39;t want to scroll, tap, and tap.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Suggestion: Please make it easier for me. Either
   add a Next button (that means the next button in the Today&amp;#39;s Paper sequence), or let me
   swipe for the next article.&lt;/strong&gt; Would this be so hard? The Washington Post supports a
   swipe (I doubt it&amp;#39;s in the print edition order, though). Even the pretty crappy app for
   my local paper, the Minneapolis Star-Tribune, provides for a swipe. The BBC app doesn&amp;#39;t
   seem to support swipe. Perhaps there&amp;#39;s some issue getting feature parity between the Times
   iOS and Android versions. I don&amp;#39;t really care -- I think that on the iOS versions of
   Today&amp;#39;s Paper, it should be super easy to get to the next article in print order.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Last thing. The mobile edition seems incomplete, at least compared to the print edition. I am
looking at p. 10 in Section C, which is the Cooking section with the headline &amp;quot;What to Make
Next Week.&amp;quot; &lt;strong&gt;Suggestion: Please, include it all. It&amp;#39;s simply not Today&amp;#39;s Paper unless everything
is there.&lt;/strong&gt; By the same token, p. A22 is the Weather. Similarly,
where&amp;#39;s the 36 Hours piece on Cape Town, South Africa? &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>Books I read in 2022 and 2023</title>
    <link rel="alternate" href="http://7fff.com/2023/12/books-i-read-in-2022-and-2023/"/>
    <id>http://7fff.com/2023/12/books-i-read-in-2022-and-2023/</id>
    <published>2023-12-26T10:31:00-06:00</published>
    <updated>2024-01-02T07:16:49-06:00</updated>
    <author>
      <name>jgn</name>
    </author>
    <content type="html">&lt;p&gt;It&amp;#39;s been awhile since I&amp;#39;ve posted anything here, which is terrible but I have reasons. 2022 and 2023 were tough years. My dad died
in January of 2022, and the prior four months or so involved a lot of caregiving. Then after that, there was
straightening out his affairs and his apartment. At the end of 2018, mom died, too. So that&amp;#39;s two
significant deaths, and their aftermaths, over a bit more than 3 years. These 
years were also dominated by acqusitions: First, Iora was aquired by One Medical in September of
2021, which brought a lot of integration work into 2022. Then in 2023, One Medical
was acquired by Amazon. At Iora I had been the VP of Technology, including security and technology
compliance; in July of 2022 I became the Senior Director of Information Security at One Medical.
So things have been busy with a lot of changes.&lt;/p&gt;

&lt;p&gt;As I look back on these years, it&amp;#39;s intersting that I did manage to read 53 books in 2021, which
must have been a kind of salve and distraction after mom died. Since 2021, though I read a paltry (for me)
33 and 30 books.&lt;/p&gt;

&lt;p&gt;So I think I&amp;#39;m going to take this as a resolution and challenge for 2024: Read more. This is probably
going to be a good year for not reading the paper and getting too caught up in politics, which I may
need to do anyway, but not as a time-killer.&lt;/p&gt;

&lt;h3&gt;2022&lt;/h3&gt;

&lt;p&gt;&lt;img src="../../../assets/images/2022-books-read-3cec65f8.png" title="2022 Books Read" alt="2022-books-read.png" width="644" height="1252" /&gt;&lt;/p&gt;

&lt;p&gt;Dad&amp;#39;s death made
2022 an unsteady year emotionally, and I didn&amp;#39;t feel like reading much that was serious. Maybe
that&amp;#39;s not quite true: Apparently I read the new Franzen but I don&amp;#39;t remember any of it. I
did read a number of the 33 1/3 books on record albums, and that was a good distraction -- really comfort
reading for me.  I re-read
some books: Curtis Sittenfeld&amp;#39;s &lt;a href="https://www.goodreads.com/review/show/3794491615"&gt;Prep&lt;/a&gt; and Donna Tartt&amp;#39;s &lt;a href="https://www.goodreads.com/review/show/4540812965"&gt;The Secret History&lt;/a&gt;. More comfort reading
(though the books are not really so comforting come to think of it).&lt;/p&gt;

&lt;p&gt;Looking back on 2022, probably the two best things I read were about the state of Maine, where my
daughter is going to college. I read &lt;a href="https://www.goodreads.com/book/show/103986.The_Lobster_Coast?from_search=true&amp;amp;from_srp=true&amp;amp;qid=lbHUiKIU71&amp;amp;rank=1"&gt;The Lobster Coast&lt;/a&gt;, a history, and &lt;a href="https://www.goodreads.com/book/show/58988394-the-midcoast?ref=rae_0"&gt;The Midcoast&lt;/a&gt;, a novel that
takes that history into account. Both highly recommended.&lt;/p&gt;

&lt;p&gt;I also read some work-related books on security and gave 5 stars to Nicole Pelroth&amp;#39;s &lt;a href="https://www.goodreads.com/review/show/3806829965"&gt;This is
How They Tell Me the World Ends&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;2023&lt;/h3&gt;

&lt;p&gt;&lt;img src="../../../assets/images/2023-books-read-0c7640f1.png" title="2023 Books Read" alt="2023-books-read.png" width="639" height="1076" /&gt;&lt;/p&gt;

&lt;p&gt;I read fewer books in 2023 than in 2022! That makes me look back on 2021, 2019, and 2018 and
wonder how I got so much read. The big standout for 2023 was a collection of books about Amazon:
all pretty good; the one I would recommend to others is &lt;a href="https://www.goodreads.com/review/show/5406985629"&gt;Working Backwards&lt;/a&gt;. I read these because
the acquisition of One Medical by Amazon was finalized in February. Actually the best read about
Amazon was a critique: Kristi Coulter&amp;#39;s &lt;a href="https://www.goodreads.com/book/show/65215677-exit-interview?from_search=true&amp;amp;from_srp=true&amp;amp;qid=izsfsGM496&amp;amp;rank=1"&gt;Exit Interview&lt;/a&gt;.
I&amp;#39;d say more about this but I think as a current employee I should stay mum. &lt;/p&gt;

&lt;h3&gt;And what about 2024?&lt;/h3&gt;

&lt;p&gt;I have a list called &lt;a href="https://www.goodreads.com/review/list/141355-john?ref=nav_mybooks&amp;amp;shelf=books-i-should-stop-putting-off"&gt;&amp;quot;Books I should Stop Putting Off&amp;quot;&lt;/a&gt;,
all killer, no filler, and all non-fiction. If I had to pick one to move to the top of my list, it would probably be &lt;a href="https://www.goodreads.com/book/show/52269471-mindf-ck"&gt;the one on Cambridge Analytica&lt;/a&gt;. I have noticed that when I mention Cambridge Analytica to
people, they don&amp;#39;t know what I&amp;#39;m talking about, and I should be at the ready for more of the story and the facts.&lt;/p&gt;

&lt;p&gt;Maybe I need a new list of fiction that I should prioritize.  Maybe &lt;a href="https://www.goodreads.com/review/list/141355-john?ref=nav_mybooks&amp;amp;shelf=prioritized-fiction-recent"&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are my stats to date:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center"&gt;Year&lt;/th&gt;
&lt;th style="text-align: center"&gt;Challenge&lt;/th&gt;
&lt;th style="text-align: center"&gt;Books Read&lt;/th&gt;
&lt;th style="text-align: center"&gt;Pages&lt;/th&gt;
&lt;th style="text-align: center"&gt;Length (Avg)&lt;/th&gt;
&lt;th style="text-align: center"&gt;Rating (Avg)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;2023&lt;/td&gt;
&lt;td style="text-align: center"&gt;40&lt;/td&gt;
&lt;td style="text-align: center"&gt;30&lt;/td&gt;
&lt;td style="text-align: center"&gt;8,574&lt;/td&gt;
&lt;td style="text-align: center"&gt;285&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;2022&lt;/td&gt;
&lt;td style="text-align: center"&gt;40&lt;/td&gt;
&lt;td style="text-align: center"&gt;33&lt;/td&gt;
&lt;td style="text-align: center"&gt;10,923&lt;/td&gt;
&lt;td style="text-align: center"&gt;331&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;2021&lt;/td&gt;
&lt;td style="text-align: center"&gt;53&lt;/td&gt;
&lt;td style="text-align: center"&gt;53&lt;/td&gt;
&lt;td style="text-align: center"&gt;14,631&lt;/td&gt;
&lt;td style="text-align: center"&gt;275&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;2020&lt;/td&gt;
&lt;td style="text-align: center"&gt;53&lt;/td&gt;
&lt;td style="text-align: center"&gt;27&lt;/td&gt;
&lt;td style="text-align: center"&gt;9,546&lt;/td&gt;
&lt;td style="text-align: center"&gt;353&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;2019&lt;/td&gt;
&lt;td style="text-align: center"&gt;53&lt;/td&gt;
&lt;td style="text-align: center"&gt;47&lt;/td&gt;
&lt;td style="text-align: center"&gt;13,798&lt;/td&gt;
&lt;td style="text-align: center"&gt;293&lt;/td&gt;
&lt;td style="text-align: center"&gt;4.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;2018&lt;/td&gt;
&lt;td style="text-align: center"&gt;31&lt;/td&gt;
&lt;td style="text-align: center"&gt;39&lt;/td&gt;
&lt;td style="text-align: center"&gt;13,692&lt;/td&gt;
&lt;td style="text-align: center"&gt;351&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;2017&lt;/td&gt;
&lt;td style="text-align: center"&gt;26&lt;/td&gt;
&lt;td style="text-align: center"&gt;34&lt;/td&gt;
&lt;td style="text-align: center"&gt;10,166&lt;/td&gt;
&lt;td style="text-align: center"&gt;299&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center"&gt;2016&lt;/td&gt;
&lt;td style="text-align: center"&gt;28&lt;/td&gt;
&lt;td style="text-align: center"&gt;30&lt;/td&gt;
&lt;td style="text-align: center"&gt;8,281&lt;/td&gt;
&lt;td style="text-align: center"&gt;276&lt;/td&gt;
&lt;td style="text-align: center"&gt;4.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</content>
  </entry>
  <entry>
    <title>Books I read in 2021</title>
    <link rel="alternate" href="http://7fff.com/2021/12/books-i-read-in-2021/"/>
    <id>http://7fff.com/2021/12/books-i-read-in-2021/</id>
    <published>2021-12-31T12:46:00-06:00</published>
    <updated>2021-12-31T15:19:50-06:00</updated>
    <author>
      <name>jgn</name>
    </author>
    <content type="html">&lt;p&gt;Thanks to Goodreads, I know what books I completed in the past year. I also participated in the
Goodreads &amp;quot;reading challenge&amp;quot; where you promise to read some number of books. I promised 53, and
managed to complete 53. This is more than I typically finish: I think the pandemic had something
to do with it. Also, strangely, I had to fly quite a lot this year, despite the pandemic, and that
provided a lot of time for getting to the final pages.&lt;/p&gt;

&lt;p&gt;Looking over the year, among the fiction
I most enjoyed and would recommend are: &lt;img src="../../../assets/images/2021-books-read-2bacd531.png" title="2021 Books Read" alt="2021-books-read.png" width="512" height="1582" /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nytimes.com/2021/11/09/books/review/the-sentence-louise-erdrich.html"&gt;Louise Erdrich, The Sentence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.newyorker.com/culture/cultural-comment/rereading-paula-foxs-desperate-characters"&gt;Paula Fox, Desparate Characters&lt;/a&gt; (from 1970; depressing but amazing: I am going to have to read
everything else she wrote)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.theguardian.com/books/2019/may/21/best-recent-thrillers-review-roundup-peter-heller-denise-mina"&gt;Peter Heller, The River&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also see some highly-rated (by me) novels that I cannot really recommend;
while they hit the mark for me, I don&amp;#39;t think others would really dig &amp;#39;em. Also, I see where my ratings were a bit off. For instance, I see I gave Amor Towles&amp;#39;s Rules
of Civility 5 stars but gave his A Gentleman in Moscow only 4. I read Gentleman first and thought
its structure was a little haphazard, which is why I downgraded it. But in reflection, I think
it was the better novel, so I&amp;#39;m going to have to subtract a star from Rules.&lt;/p&gt;

&lt;p&gt;In non-fiction, my highest rated are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.theguardian.com/us-news/2021/jan/30/kill-switch-review-senate-filibuster-republicans-mcconnell-trump"&gt;Adam Jentleson, Kill Switch&lt;/a&gt; (about the United States Senate)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.washingtonpost.com/entertainment/books/wework-adam-neumann-cult-of-we-review/2021/07/22/769ea784-eaf5-11eb-8950-d73b3e93ff7f_story.html"&gt;Eliot Brown, The Cult of We&lt;/a&gt; (about WeWork; better than the similar Billio Dollar Loser)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lareviewofbooks.org/article/the-lawlessness-of-medicine/"&gt;Siddhartha Mukherjee, The Laws of Medicine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nytimes.com/2018/12/12/books/review-curse-of-bigness-antitrust-law-tim-wu.html"&gt;Tim Wu, The Curse of Bigness&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This seems to be the first time in many years when I didn&amp;#39;t have a highly-rated tech book. Another
oddity is that I only read one rock book, &lt;a href="https://www.npr.org/2020/01/28/800071527/i-was-singing-for-my-life-amy-rigby-on-mixing-music-and-motherhood"&gt;Amy Rigby&amp;#39;s Girl to City&lt;/a&gt; (excellent). I suppose some
people read more music books when they can&amp;#39;t see music as much (as under the pandemic) but I think
my desire to read more rock books is piqued by the live music experience. On the
other hand, I read 7 books I&amp;#39;d classify as memoir/autobiography; this year, they were all memoir
(as opposed to full-on autobiography).
I gave two of them 5 stars, both by the same author: &lt;a href="https://www.theguardian.com/books/2002/sep/01/biography.features1"&gt;Paula Fox&amp;#39;s Borrowed Finery&lt;/a&gt;, and her
&lt;a href="https://www.kirkusreviews.com/book-reviews/paula-fox/the-coldest-winter-2/"&gt;The Coldest Winter&lt;/a&gt;. Some surprises in memoir: I gave &lt;a href="https://www.youtube.com/watch?v=PTnybQtA19U"&gt;Anna Kendrick&amp;#39;s Scrappy Little Nobody&lt;/a&gt;
a 4 (better than I would have expected) and Elizabeth Hardwick&amp;#39;s celebrated Sleepless Nights a 3 (it was
kind of boring and I didn&amp;#39;t see the rationiale for its artiness).&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been doing the Challenge since 2016, and here&amp;#39;s how things stack up over the years:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Year&lt;/th&gt;
&lt;th style="text-align: center"&gt;Challenge&lt;/th&gt;
&lt;th style="text-align: center"&gt;Books Read&lt;/th&gt;
&lt;th style="text-align: right"&gt;Pages&lt;/th&gt;
&lt;th style="text-align: center"&gt;Length (Avg)&lt;/th&gt;
&lt;th style="text-align: center"&gt;Rating (Avg)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2016&lt;/td&gt;
&lt;td style="text-align: center"&gt;28&lt;/td&gt;
&lt;td style="text-align: center"&gt;30&lt;/td&gt;
&lt;td style="text-align: right"&gt;8,281&lt;/td&gt;
&lt;td style="text-align: center"&gt;276&lt;/td&gt;
&lt;td style="text-align: center"&gt;4.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017&lt;/td&gt;
&lt;td style="text-align: center"&gt;26&lt;/td&gt;
&lt;td style="text-align: center"&gt;34&lt;/td&gt;
&lt;td style="text-align: right"&gt;10,166&lt;/td&gt;
&lt;td style="text-align: center"&gt;299&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018&lt;/td&gt;
&lt;td style="text-align: center"&gt;31&lt;/td&gt;
&lt;td style="text-align: center"&gt;39&lt;/td&gt;
&lt;td style="text-align: right"&gt;13,692&lt;/td&gt;
&lt;td style="text-align: center"&gt;351&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019&lt;/td&gt;
&lt;td style="text-align: center"&gt;53&lt;/td&gt;
&lt;td style="text-align: center"&gt;47&lt;/td&gt;
&lt;td style="text-align: right"&gt;13,798&lt;/td&gt;
&lt;td style="text-align: center"&gt;293&lt;/td&gt;
&lt;td style="text-align: center"&gt;4.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020&lt;/td&gt;
&lt;td style="text-align: center"&gt;53&lt;/td&gt;
&lt;td style="text-align: center"&gt;27&lt;/td&gt;
&lt;td style="text-align: right"&gt;9,546&lt;/td&gt;
&lt;td style="text-align: center"&gt;353&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021&lt;/td&gt;
&lt;td style="text-align: center"&gt;53&lt;/td&gt;
&lt;td style="text-align: center"&gt;53&lt;/td&gt;
&lt;td style="text-align: right"&gt;14,631&lt;/td&gt;
&lt;td style="text-align: center"&gt;275&lt;/td&gt;
&lt;td style="text-align: center"&gt;3.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;The &amp;quot;Challenge&amp;quot; column is the number I strived to read, and &amp;quot;Books&amp;quot; is the actual total. In 2019
I started challenging myself to read 53 books/year but it was only this year that I managed
to satify that expectation. I will admit that I read some shorter books (hence, the smallest
average number of pages since 2016.) You might notice that dip in reading in 2020: My ability
to focus  was disrupted by politics and the 2020 Presidential election. Besides being
completely distracted, I was not the healthiest: I must have gained 15 pounds that I still haven&amp;#39;t
gotten rid of. And lest I forget, I had a spell of afib in February, 2020, that lasted until June:
That really messed up my reading time. On the other hand, while I read fewer pages in 2020, each book was
longer. I suppose looking over this summary, my &amp;quot;natural&amp;quot; year of reading is about 40 books of
about 325 pages each, for some 13,000 pages. As I note, I read a lot of shorter books this year
to hit my number (53); so I think that number may be a bit inflated and I should allow myself to read longer
works (on average). So for 2022, I think I&amp;#39;ll challenge myself to 45. I look at the reading tallies
of some of my friends (Ellie: 62 books / 369 pp. average; Kelly: 105/337) and don&amp;#39;t know how they
do it.&lt;/p&gt;

&lt;p&gt;Some might think that my average rating of about 3.9 is
too high; but I am pretty choosy about what I read, so I&amp;#39;ll stand by that average number. Here&amp;#39;s how I grade.
5 is the highest and 1 is the lowest:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A terrible book that I probably didn&amp;#39;t even finish. Poorly written and uninteresting content.&lt;/li&gt;
&lt;li&gt;A weak book that may have some merit but is essentially forgettable.&lt;/li&gt;
&lt;li&gt;Not bad.&lt;/li&gt;
&lt;li&gt;A good book that I might come back to some time. Memorable. Maybe important.&lt;/li&gt;
&lt;li&gt;Top-notch. If I had the time I&amp;#39;d re-read it.&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>The perils of rounding; or, Careful with that Axe, Eugene</title>
    <link rel="alternate" href="http://7fff.com/2021/04/the-perils-of-rounding-or-careful-with-that-axe-eugene/"/>
    <id>http://7fff.com/2021/04/the-perils-of-rounding-or-careful-with-that-axe-eugene/</id>
    <published>2021-04-09T09:01:00-05:00</published>
    <updated>2021-04-12T08:03:55-05:00</updated>
    <author>
      <name>jgn</name>
    </author>
    <content type="html">&lt;p&gt;In the image you&amp;#39;ll see two displays for a single weight measurement I conducted recently on a
&lt;a href="https://www.getqardio.com/qardiobase-smart-scale-iphone-android/"&gt;Qardio Base scale&lt;/a&gt;. Qardio sells
a number of devices that can measure various things and report those measurements to your phone. I
have a Qardio Base for my weight, and a Qardio Arm for blood pressure. The first Qardio Base I had
was flaky, and fortunately Qardio replaced it. Yay, Qardio! The new one seems to work pretty well --
except that is does weird things with my measurements, which is the purpose of this post. I use
these devices with my IPhone. These products will save the measurements to Apple Health. But I also
manually copy the measurements over into a spreadsheet so I can see a lot of different data in one
place and analyze them.&lt;/p&gt;

&lt;p&gt;Check the image. This is &lt;em&gt;the very same measurement&lt;/em&gt;, only the second display is taking place a
minute later. Note the BMI values. When I stood on the scale and took the measurement, the BMI is
reported as 24.9. &lt;img src="../../../assets/images/rounding-0ea5c86e.png" title="Rounding" alt="rounding.png" width="1520" height="1344" /&gt;&lt;/p&gt;

&lt;p&gt;However, a minute later, the measurement is 25.0.&lt;/p&gt;

&lt;p&gt;This is especially annoying because 24.9 is in the &amp;quot;normal&amp;quot; range, while 25.0 is in the &amp;quot;overweight&amp;quot;
range. So I notice that. I&amp;#39;ve been trying to lose weight recently, and this discrepenacy drives me
pretty crazy. Which is it, Qardio? Get your story straight!&lt;/p&gt;

&lt;p&gt;Thus, I have noticed that the BMI calculation will sometimes change within a few minutes of the
original measurement. The discrepancy can be triggered by completely shutting down the app and
restarting it -- and then looking at your last measurement from the History rather than the live
view. This is a chronic issue. I just saw a fluctuation again this morning.&lt;/p&gt;

&lt;p&gt;I first reported this issue to Qardio on September 20, 2020. On Oct. 13 I was told: &amp;quot;Our engineering
team has not closed this issue and is still investigating into what may be causing this issue.&amp;quot;
That&amp;#39;s cool. Anyway, it was never fixed. I reported it again on Nov. 20, 2020. I reported it again
on Dec. 5, 2020. I reported it again on April 2, 2021. Every time they suggest updating the app --
which I do. But I think it&amp;#39;s still broken; we&amp;#39;ll see how the latest upgrade goes.&lt;/p&gt;

&lt;p&gt;So this is actually a really terrible bug. Here&amp;#39;s why: &lt;em&gt;You can&amp;#39;t depend on the display of the
value&lt;/em&gt;. Sometimes it changes. This erodes one&amp;#39;s faith in the idea that the device is making an
accurate measurement. It&amp;#39;s an especially bad bug because, really, &lt;em&gt;that&amp;#39;s all the system is supposed
to do&lt;/em&gt;!: Measure a value and report it. It would seem, though, that: (1) Qardio is not able to
recognize that this is a serious bug that undermines one&amp;#39;s faith in their system; and/or (2) they
can&amp;#39;t fix it.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Smells like a rounding error to me, and maybe they don&amp;#39;t have control over part of their ecosystem.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s my theory. Let&amp;#39;s say that the original measurement is . . . &lt;code&gt;24.9499&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When it&amp;#39;s displayed, it is rounded to a precision of 1 digit. So &lt;code&gt;24.9499&lt;/code&gt; rounded to the nearest
fractional digit is &lt;code&gt;24.9&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I think, then, that Qardio saves that reading, &lt;code&gt;24.9499&lt;/code&gt;. But when they save it, they save it
rounded to two digits. This rounding might happen locally on the phone, or on their server or in
Apple Health. Anyway, rounded to two fractional digits, it&amp;#39;s &lt;code&gt;24.95&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now the next time the value is displayed, they look up the saved value (&lt;code&gt;24.95&lt;/code&gt;). They then display
the saved value rounded to one fractional digit. And what is &lt;code&gt;24.95&lt;/code&gt; rounded to one fractional
digit? It&amp;#39;s &lt;code&gt;25.0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Oops.&lt;/p&gt;

&lt;p&gt;Before I close, I suppose I should belabor what &amp;quot;rounding&amp;quot; a number can mean. The Ruby documentation
says that a number rounded to &lt;code&gt;ndigits&lt;/code&gt; means &amp;quot;Returns float rounded to the nearest value with a
precision of ndigits decimal digits.&amp;quot; Here&amp;#39;s how one implementation of Ruby does it (I&amp;#39;m looking at
the code from Rubinus
&lt;a href="https://github.com/rubinius/rubinius/blob/master/core/float.rb#L90-L91"&gt;here&lt;/a&gt; and
&lt;a href="https://github.com/rubinius/rubinius/blob/master/machine/class/float.cpp#L373-L385"&gt;here&lt;/a&gt;, which is
easy to read):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Multiply the given value &lt;code&gt;a&lt;/code&gt; by &lt;code&gt;10**n&lt;/code&gt;, giving &lt;code&gt;a1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Get rid of the fractional digits in &lt;code&gt;a1&lt;/code&gt;, giving &lt;code&gt;a2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;a1&lt;/code&gt; minus &lt;code&gt;a2&lt;/code&gt; &amp;gt;= &lt;code&gt;0.5&lt;/code&gt;, set &lt;code&gt;a2&lt;/code&gt; to &lt;code&gt;a2&lt;/code&gt; + &lt;code&gt;1.0&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Return &lt;code&gt;a2&lt;/code&gt; / &lt;code&gt;10**n&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So let&amp;#39;s try this with &lt;code&gt;a&lt;/code&gt; set to &lt;code&gt;24.9499&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;a1&lt;/code&gt; is &lt;code&gt;249.499&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a2&lt;/code&gt; is &lt;code&gt;249&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(&lt;code&gt;a1&lt;/code&gt; minus &lt;code&gt;a2&lt;/code&gt; is &lt;code&gt;0.499&lt;/code&gt; which is not greater than &lt;code&gt;0.5&lt;/code&gt; so do nothing)&lt;/li&gt;
&lt;li&gt;return &lt;code&gt;249&lt;/code&gt; / &lt;code&gt;10**1&lt;/code&gt;, or &lt;code&gt;24.9&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And here&amp;#39;s the case with &lt;code&gt;a&lt;/code&gt; set to &lt;code&gt;24.9599&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;a1&lt;/code&gt; is &lt;code&gt;249.599&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a2&lt;/code&gt; is &lt;code&gt;249&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(&lt;code&gt;a1&lt;/code&gt; minus &lt;code&gt;a2&lt;/code&gt; is &lt;code&gt;0.599&lt;/code&gt; which is greater than &lt;code&gt;0.5&lt;/code&gt; so set &lt;code&gt;a2&lt;/code&gt; to &lt;code&gt;a2&lt;/code&gt; + &lt;code&gt;1.0&lt;/code&gt; (&lt;code&gt;250&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;return &lt;code&gt;250&lt;/code&gt; / &lt;code&gt;10**1&lt;/code&gt;, or &lt;code&gt;25.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Maybe this will help Qardio fix their bug.&lt;/p&gt;
</content>
  </entry>
</feed>
